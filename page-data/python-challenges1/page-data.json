{"componentChunkName":"component---src-templates-blog-template-js","path":"/python-challenges1/","result":{"data":{"cur":{"id":"e56a0eeb-282a-55ca-ad17-0f85a9dd79db","html":"<h2 id=\"1신고-결과-받기-문제-설명\" style=\"position:relative;\"><a href=\"#1%EC%8B%A0%EA%B3%A0-%EA%B2%B0%EA%B3%BC-%EB%B0%9B%EA%B8%B0-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"1신고 결과 받기 문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.신고 결과 받기 문제 설명</h2>\n<p>신입사원 무지는 게시판 불량 이용자를 신고하고 처리 결과를 메일로 발송하는 시스템을 개발하려 합니다. 무지가 개발하려는 시스템은 다음과 같습니다.</p>\n<p>각 유저는 한 번에 한 명의 유저를 신고할 수 있습니다.</p>\n<p>신고 횟수에 제한은 없습니다. 서로 다른 유저를 계속해서 신고할 수 있습니다.</p>\n<p>한 유저를 여러 번 신고할 수도 있지만, 동일한 유저에 대한 신고 횟수는 1회로 처리됩니다.</p>\n<p>k번 이상 신고된 유저는 게시판 이용이 정지되며, 해당 유저를 신고한 모든 유저에게 정지 사실을 메일로 발송합니다.</p>\n<p>유저가 신고한 모든 내용을 취합하여 마지막에 한꺼번에 게시판 이용 정지를 시키면서 정지 메일을 발송합니다.</p>\n<p>다음은 전체 유저 목록이 [“muzi”, “frodo”, “apeach”, “neo”]이고, k = 2(즉, 2번 이상 신고당하면 이용 정지)인 경우의 예시입니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">유저 ID</th>\n<th align=\"center\">유저가 신고한 ID</th>\n<th align=\"center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">“muzi”</td>\n<td align=\"center\">“frodo”</td>\n<td align=\"center\">“muzi”가 “frodo”를 신고했습니다.</td>\n</tr>\n<tr>\n<td align=\"center\">“apeach”</td>\n<td align=\"center\">“frodo”</td>\n<td align=\"center\">“apeach”가 “frodo”를 신고했습니다.</td>\n</tr>\n<tr>\n<td align=\"center\">“frodo”</td>\n<td align=\"center\">“neo”</td>\n<td align=\"center\">“frodo”가 “neo”를 신고했습니다.</td>\n</tr>\n<tr>\n<td align=\"center\">“muzi”</td>\n<td align=\"center\">“neo”</td>\n<td align=\"center\">“muzi”가 “neo”를 신고했습니다.</td>\n</tr>\n<tr>\n<td align=\"center\">“apeach”</td>\n<td align=\"center\">“muzi”</td>\n<td align=\"center\">“apeach”가 “muzi”를 신고했습니다.</td>\n</tr>\n</tbody>\n</table>\n<p>각 유저별로 신고당한 횟수는 다음과 같습니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">유저 ID</th>\n<th align=\"center\">신고당한 횟수</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">“muzi”</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">“frodo”</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">“apeach”</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">“neo”</td>\n<td align=\"center\">2</td>\n</tr>\n</tbody>\n</table>\n<p>위 예시에서는 2번 이상 신고당한 “frodo”와 “neo”의 게시판 이용이 정지됩니다.</p>\n<p>이때, 각 유저별로 신고한 아이디와 정지된 아이디를 정리하면 다음과 같습니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">유저 ID</th>\n<th align=\"center\">유저가 신고한 ID</th>\n<th align=\"center\">정지된 ID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">“muzi”</td>\n<td align=\"center\">[“frodo”, “neo”]</td>\n<td align=\"center\">[“frodo”, “neo”]</td>\n</tr>\n<tr>\n<td align=\"center\">“frodo”</td>\n<td align=\"center\">[“neo”]</td>\n<td align=\"center\">[“neo”]</td>\n</tr>\n<tr>\n<td align=\"center\">“apeach”</td>\n<td align=\"center\">[“muzi”, “frodo”]</td>\n<td align=\"center\">[“frodo”]</td>\n</tr>\n<tr>\n<td align=\"center\">“neo”</td>\n<td align=\"center\">없음</td>\n<td align=\"center\">없음</td>\n</tr>\n</tbody>\n</table>\n<p>따라서 “muzi”는 처리 결과 메일을 2회, “frodo”와 “apeach”는 각각 처리 결과 메일을 1회 받게 됩니다.</p>\n<p>이용자의 ID가 담긴 문자열 배열 id_list, 각 이용자가 신고한 이용자의 ID 정보가 담긴 문자열 배열 report, 정지 기준이 되는 신고 횟수 k가 매개변수로 주어질 때, 각 유저별로 처리 결과 메일을 받은 횟수를 배열에 담아 return 하도록 solution 함수를 완성해주세요.</p>\n<h3 id=\"1-1제한사항\" style=\"position:relative;\"><a href=\"#1-1%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"1 1제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1.제한사항</h3>\n<ul>\n<li>2 ≤ id_list의 길이 ≤ 1,000\n<ul>\n<li>1 ≤ id_list의 원소 길이 ≤ 10</li>\n<li>id_list의 원소는 이용자의 id를 나타내는 문자열이며 알파벳 소문자로만 이루어져 있습니다.</li>\n<li>id_list에는 같은 아이디가 중복해서 들어있지 않습니다.</li>\n</ul>\n</li>\n<li>1 ≤ report의 길이 ≤ 200,000\n<ul>\n<li>3 ≤ report의 원소 길이 ≤ 21</li>\n<li>report의 원소는 “이용자id 신고한id”형태의 문자열입니다.</li>\n<li>예를 들어 “muzi frodo”의 경우 “muzi”가 “frodo”를 신고했다는 의미입니다.</li>\n<li>id는 알파벳 소문자로만 이루어져 있습니다.</li>\n<li>이용자id와 신고한id는 공백(스페이스)하나로 구분되어 있습니다.</li>\n<li>자기 자신을 신고하는 경우는 없습니다.</li>\n</ul>\n</li>\n<li>1 ≤ k ≤ 200, k는 자연수입니다.\n<ul>\n<li>return 하는 배열은 id_list에 담긴 id 순서대로 각 유저가 받은 결과 메일 수를 담으면 됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-2입출력-예\" style=\"position:relative;\"><a href=\"#1-2%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"1 2입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2.입출력 예</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">id_list</th>\n<th align=\"center\">report</th>\n<th align=\"center\">k</th>\n<th align=\"center\">result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">[“muzi”, “frodo”, “apeach”, “neo”]</td>\n<td align=\"center\">[“muzi frodo”,“apeach frodo”,“frodo neo”,“muzi neo”,“apeach muzi”]</td>\n<td align=\"center\">2</td>\n<td align=\"center\">[2,1,1,0]</td>\n</tr>\n<tr>\n<td align=\"center\">[“con”, “ryan”]</td>\n<td align=\"center\">[“ryan con”, “ryan con”, “ryan con”, “ryan con”]</td>\n<td align=\"center\">3</td>\n<td align=\"center\">[0,0]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1-3입출력-예-설명\" style=\"position:relative;\"><a href=\"#1-3%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"1 3입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-3.입출력 예 설명</h3>\n<p>입출력 예 #1</p>\n<p>문제의 예시와 같습니다.</p>\n<p>입출력 예 #2</p>\n<p>“ryan”이 “con”을 4번 신고했으나, 주어진 조건에 따라 한 유저가 같은 유저를 여러 번 신고한 경우는 신고 횟수 1회로 처리합니다. 따라서 “con”은 1회 신고당했습니다. 3번 이상 신고당한 이용자는 없으며, “con”과 “ryan”은 결과 메일을 받지 않습니다. 따라서 [0, 0]을 return 합니다.</p>\n<h2 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>id_list<span class=\"token punctuation\">,</span> report<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> id_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(answer)</span>\n    report_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>id_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        report_list<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        \n    <span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>report<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        users <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> report_list<span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            report_list<span class=\"token punctuation\">[</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> key <span class=\"token keyword\">in</span> report_list<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>report_list<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> report_list<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                user_index <span class=\"token operator\">=</span> id_list<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n                answer<span class=\"token punctuation\">[</span>user_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    \n    <span class=\"token keyword\">return</span> answer\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1%EC%8B%A0%EA%B3%A0-%EA%B2%B0%EA%B3%BC-%EB%B0%9B%EA%B8%B0-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">1.신고 결과 받기 문제 설명</a></p>\n<ul>\n<li><a href=\"#1-1%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\">1-1.제한사항</a></li>\n<li><a href=\"#1-2%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\">1-2.입출력 예</a></li>\n<li><a href=\"#1-3%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\">1-3.입출력 예 설명</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\">내 풀이</a></p>\n</li>\n</ul>\n</div>","excerpt":"1.신고 결과 받기 문제 설명 신입사원 무지는 게시판 불량 이용자를 신고하고 처리 결과를 메일로 발송하는 시스템을 개발하려 합니다. 무지가 개발하려는 시스템은 다음과 같습니다. 각 유저는 한 번에 한 명의 유저를 신고할 수 있습니다. 신고 횟수에 제한은 없습니다. 서로 다른 유저를 계속해서 신고할 수 있습니다. 한 유저를 여러 번 신고할 수도 있지만, 동일한 유저에 대한 신고 횟수는 1회로 처리됩니다. k번 이상 신고된 유저는 게시판 이용이 정지되며, 해당 유저를 신고한 모든 유저에게 정지 사실을 메일로 발송합니다. 유저가 신고한 모든 내용을 취합하여 마지막에 한꺼번에 게시판 이용 정지를 시키면서 정지 메일을 발송합니다. 다음은 전체 유저 목록이 [“muzi”, “frodo”, “apeach”, “neo”]이고, k = 2(즉, 2번 이상 신고당하면 이용 정지)인 경우의 예시입니다. 유저 ID 유저가 신고한 ID 설명 “muzi” “frodo” “muzi”가 “frodo”를 신고했…","frontmatter":{"date":"September 19, 2022","title":"python 코딩테스트 - 신고 결과 받기","categories":"python 코딩테스트","author":"coding-palette","emoji":"👻"},"fields":{"slug":"/python-challenges1/"}},"next":{"id":"1dae0f93-1c65-57e4-9468-5f57e09e1e8e","html":"<h2 id=\"1while\" style=\"position:relative;\"><a href=\"#1while\" aria-label=\"1while permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.while</h2>\n<p>반복해서 문장을 수행해야 할 경우 while문을 사용합니다. 그래서 while문을 반복문이라고도 부릅니다.</p>\n<h3 id=\"1-1while-기본구조\" style=\"position:relative;\"><a href=\"#1-1while-%EA%B8%B0%EB%B3%B8%EA%B5%AC%EC%A1%B0\" aria-label=\"1 1while 기본구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1.while 기본구조</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token operator\">&lt;</span>조건문<span class=\"token operator\">></span><span class=\"token punctuation\">:</span>\n    <span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">1</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">2</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>수행할 문장<span class=\"token number\">3</span><span class=\"token operator\">></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nresult <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> index <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    result <span class=\"token operator\">=</span> result <span class=\"token operator\">+</span> index\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'index 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'result 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># index 값은 100 입니다.</span>\n<span class=\"token comment\"># result 값은 5050 입니다.</span></code></pre></div>\n<h3 id=\"1-2while-break\" style=\"position:relative;\"><a href=\"#1-2while-break\" aria-label=\"1 2while break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2.while break</h3>\n<p>while문은 조건문이 참인 동안 계속해서 while문 안의 내용을 반복적으로 수행합니다. 하지만 강제로 while문을 빠져나가고 싶을 때가 있으면 break를 이용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nresult <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> index <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> index <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        result <span class=\"token operator\">=</span> result <span class=\"token operator\">+</span> index\n\n    <span class=\"token keyword\">if</span> result <span class=\"token operator\">></span> <span class=\"token number\">1000</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'index 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'result 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># index 값은 64 입니다.</span>\n<span class=\"token comment\"># result 값은 1056 입니다.</span></code></pre></div>\n<p>result_even 는 짝수만 더하다가 더한 결과 값이 1000을 넘었을때 break가 걸리도록 하는 코드 입니다.</p>\n<h3 id=\"1-2while-continue\" style=\"position:relative;\"><a href=\"#1-2while-continue\" aria-label=\"1 2while continue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2.while continue</h3>\n<p>while 반복문을 돌다가 특정 조건을 만족할때, 아래 코드는 무시하고 바로 반복문의 맨위로 올라가고 싶을때가 있을 수 있습니다.\n즉 중간에서 바로 맨 처음으로 올라가는 기능을 하는, 키워드 continue 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nresult <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> index <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> index <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n\n    result <span class=\"token operator\">=</span> result <span class=\"token operator\">+</span> index\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'index 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'result 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># index 값은 100 입니다.</span>\n<span class=\"token comment\"># result 값은 2550 입니다.</span></code></pre></div>\n<h2 id=\"2for\" style=\"position:relative;\"><a href=\"#2for\" aria-label=\"2for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.for</h2>\n<p>for문은 while문과 달리 지정한 횟수만큼을 반복할 때 주로 사용됩니다.</p>\n<p>리스트, 문자열, 튜플 등 컬랙션 타입의 아이템을 하나씩 순회하면서 사용합니다.</p>\n<p>for문의 기본 구조는 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> 변수 <span class=\"token keyword\">in</span> 리스트<span class=\"token punctuation\">(</span>또는 튜플<span class=\"token punctuation\">,</span> 문자열<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    수행할 문장<span class=\"token number\">1</span>\n    수행할 문장<span class=\"token number\">2</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h3 id=\"2-1for-기본\" style=\"position:relative;\"><a href=\"#2-1for-%EA%B8%B0%EB%B3%B8\" aria-label=\"2 1for 기본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1.for 기본</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">rainbow <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Indigo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Violet'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> color <span class=\"token keyword\">in</span> rainbow<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'컬러는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># 컬러는 Red 입니다.</span>\n<span class=\"token comment\"># 컬러는 Orange 입니다.</span>\n<span class=\"token comment\"># 컬러는 Yellow 입니다.</span>\n<span class=\"token comment\"># 컬러는 Green 입니다.</span>\n<span class=\"token comment\"># 컬러는 Blue 입니다.</span>\n<span class=\"token comment\"># 컬러는 Indigo 입니다.</span>\n<span class=\"token comment\"># 컬러는 Violet 입니다.</span></code></pre></div>\n<h3 id=\"2-2for에서-index-사용-enumerate\" style=\"position:relative;\"><a href=\"#2-2for%EC%97%90%EC%84%9C-index-%EC%82%AC%EC%9A%A9-enumerate\" aria-label=\"2 2for에서 index 사용 enumerate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2.for에서 index 사용, enumerate</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">rainbow <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Red'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Green'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Indigo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Violet'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> color <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>rainbow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'인덱스는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'컬러는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n    \n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># 인덱스는 0 입니다.</span>\n<span class=\"token comment\"># 컬러는 Red 입니다.</span>\n<span class=\"token comment\"># 인덱스는 1 입니다.</span>\n<span class=\"token comment\"># 컬러는 Orange 입니다.</span>\n<span class=\"token comment\"># 인덱스는 2 입니다.</span>\n<span class=\"token comment\"># 컬러는 Yellow 입니다.</span>\n<span class=\"token comment\"># 인덱스는 3 입니다.</span>\n<span class=\"token comment\"># 컬러는 Green 입니다.</span>\n<span class=\"token comment\"># 인덱스는 4 입니다.</span>\n<span class=\"token comment\"># 컬러는 Blue 입니다.</span>\n<span class=\"token comment\"># 인덱스는 5 입니다.</span>\n<span class=\"token comment\"># 컬러는 Indigo 입니다.</span>\n<span class=\"token comment\"># 인덱스는 6 입니다.</span>\n<span class=\"token comment\"># 컬러는 Violet 입니다.</span>\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1while\">1.while</a></p>\n<ul>\n<li><a href=\"#1-1while-%EA%B8%B0%EB%B3%B8%EA%B5%AC%EC%A1%B0\">1-1.while 기본구조</a></li>\n<li><a href=\"#1-2while-break\">1-2.while break</a></li>\n<li><a href=\"#1-2while-continue\">1-2.while continue</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2for\">2.for</a></p>\n<ul>\n<li><a href=\"#2-1for-%EA%B8%B0%EB%B3%B8\">2-1.for 기본</a></li>\n<li><a href=\"#2-2for%EC%97%90%EC%84%9C-index-%EC%82%AC%EC%9A%A9-enumerate\">2-2.for에서 index 사용, enumerate</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"September 05, 2022","title":"python 기초3","categories":"python","author":"coding-palette","emoji":"👻"},"fields":{"slug":"/python-basics3/"}},"prev":{"id":"7119fa76-3206-502b-bcde-3de79b3c91bb","html":"<p>파이썬의 내장 함수는 모듈이나 패키지를 가져오지 않고 바로 사용할 수 있는 함수입니다.</p>\n<h2 id=\"1abs\" style=\"position:relative;\"><a href=\"#1abs\" aria-label=\"1abs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.abs</h2>\n<p>어떤 숫자를 입력받았을 때, 그 숫자의 절댓값을 돌려주는 함수 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># 10</span>\n<span class=\"token comment\"># 10</span></code></pre></div>\n<h2 id=\"2all\" style=\"position:relative;\"><a href=\"#2all\" aria-label=\"2all permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.all</h2>\n<p>반복 가능한 객체의 요소가 모두 참이면 True, 거짓이 하나라도 있으면 False를 돌려줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token comment\"># False</span></code></pre></div>\n<p>0은 거짓이므로 때문에 두 번째 프린트는 False를 리턴 합니다.</p>\n<h2 id=\"3any\" style=\"position:relative;\"><a href=\"#3any\" aria-label=\"3any permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.any</h2>\n<p>반복 가능한 객체의 요소가 하나라도 참이면 True를 돌려주고, x가 모두 거짓일 때에만 False를 돌려줍니다. all(x)의 반대라고 생각하시면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># True</span>\n<span class=\"token comment\"># False</span></code></pre></div>\n<p>0, \"\" 2개 모두 거짓이므로 두 번째 프린트는 False를 리턴 합니다.</p>\n<h2 id=\"4chr\" style=\"position:relative;\"><a href=\"#4chr\" aria-label=\"4chr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.chr</h2>\n<p>ASCII 코드값에 해당하는 문자를 반환 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># a</span></code></pre></div>\n<h2 id=\"5divmod\" style=\"position:relative;\"><a href=\"#5divmod\" aria-label=\"5divmod permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.divmod</h2>\n<p>a를 b로 나눈 몫과 나머지를 튜플 형태로 돌려 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># (3, 1)</span></code></pre></div>\n<h2 id=\"6filter\" style=\"position:relative;\"><a href=\"#6filter\" aria-label=\"6filter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.filter</h2>\n<p>반복 가능한 객체에서 특정 조건에 맞는 요소만 가지고 옵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> v <span class=\"token operator\">></span> <span class=\"token number\">3</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>check<span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'필터된 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># 필터된 값은 [4, 5] 입니다.</span></code></pre></div>\n<h2 id=\"7map\" style=\"position:relative;\"><a href=\"#7map\" aria-label=\"7map permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7.map</h2>\n<p>반복 가능한 객체의 요소를 지정된 함수로 처리한 뒤 map 객체를 반환 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> v <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>change<span class=\"token punctuation\">,</span> numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'변경된 값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>result<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 입니다.'</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Output:</span>\n<span class=\"token comment\"># 변경된 값은 [2, 3, 4, 5, 6] 입니다.</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1abs\">1.abs</a></li>\n<li><a href=\"#2all\">2.all</a></li>\n<li><a href=\"#3any\">3.any</a></li>\n<li><a href=\"#4chr\">4.chr</a></li>\n<li><a href=\"#5divmod\">5.divmod</a></li>\n<li><a href=\"#6filter\">6.filter</a></li>\n<li><a href=\"#7map\">7.map</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 16, 2022","title":"python 내장 함수","categories":"python","author":"coding-palette","emoji":"👻"},"fields":{"slug":"/python-built-in-function/"}},"site":{"siteMetadata":{"siteUrl":"https://codingpalette.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/python-challenges1/","nextSlug":"/python-basics3/","prevSlug":"/python-built-in-function/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}