{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"04339540-47ab-5425-8d4e-f1f2bc9e5145","excerpt":"테스트를 하기 앞서 저는 이전 파이썬 가상환경 만들기 에서 코드를 작성하도록 하겠습니다.  으로 가상환경을 실행시켜 주시고 라는 파일을 생성합니다. 생성이 완료 되었으면 라고 입력한 뒤 터미널에서  라고 입력하시고 아래 이미지 처럼 나오시면 정상적으로 준비가 완료 된 것 입니다.  아래 코드들을 입력하시고 확인하고 싶으시면  라고 입력하시면 됩니다. 1.주석 및 프린트 1-1.주석 주석처리는  으로 하면 주석이 됩니다. 1-2.프린트 프린트 출력은 으로 출력이 가능합니다. 2.변수 2-1.변수 할당 cat_name이라는 변수에 나비라는 문자열을 할당해 보겠습니다. 2-2.숫자 계산 변수에 숫자를 담아 사칙연산을 해보도록 하겠습니다. 2-3.변수 + 텍스트 출력 변수와 텍스트를 합칠때는 앞에 (한줄일 때) 또는 (여러줄일 때)를 활용하면 됩니다. 3.연산자 3-1.산술 연산자 a = 10, b = 20, c = 3 이라고 하면 Operator Description Example + …","fields":{"slug":"/python-basics/"},"frontmatter":{"categories":"python","title":"python 기초","date":"September 03, 2022"}},"next":{"fields":{"slug":"/python-venv/"}},"previous":null},{"node":{"id":"b8706932-ec5b-5e66-87dc-efb48a00d355","excerpt":"1.가상환경 생성 python 3.3 이상의 버전 부터는 venv 모듈을 내장하고 있으므로 따로 설치없이 가능합니다. 터미널을 열어 자신이 개발하려는 workspace 폴더에 가서 아래 명령어를 입력합니다.  venv은 가상환경 이름이므로 자유롭게 쓰면 됩니다.  해당 구문을 실행하면 위 이미지 처럼 venv이름을 가진 가상 환경 폴더가 생성 됩니다. 2.가상환경 실행 생성을 했으면 해당 가상환경을 실행해야 합니다. 실행 소스 파일은 가상 환경 폴더 안의 bin폴더 안에 있습니다.  source 명령어를 통해 activate파일을 실행시켜 가상환경에 진입합니다.  위 이미지처럼 terminal 앞쪽에 **(venv)**같이 가상환경의 이름이 붙으면 진입에 성공한 것 입니다.   명령어를 통해 설치된 패키지 버전들을 확인해보면 pip와 setuptools 빼고는 아무것도 설치가 안된 깨끗한 상태임을 확인할 수 있습니다. python3로 가상환경을 만들고 진입했으면 pip3 대신  명…","fields":{"slug":"/python-venv/"},"frontmatter":{"categories":"python","title":"python 가상환경","date":"September 02, 2022"}},"next":{"fields":{"slug":"/homebrew-install/"}},"previous":{"fields":{"slug":"/python-basics/"}}},{"node":{"id":"b6d9de20-667c-5b71-85e2-74920600d4dc","excerpt":"1.Homebrew 명령어 : 커맨드 라인 프로그램 : 홈브류 최신버전 업데이트 : 프로그램 설치(최신버전으로) ex) brew install mysql, brew install mysql@5.5 : 업그레이드 필요한 프로그램 찾기 : 패키지 업그레이드  : 모든 패키지 업그레이드  : 버전을 여러개 깔았는데 최신버전 이외의 버전들 전부 삭제  : 특정 패키지 삭제 2.Homebrew 설치 방법 먼저 터미널을 실행시켜 주세요. 그 다음 홈브류 사이트 으로 들어간 후 설치하기를 복사하고 붙여넣기를 해주세요.\n Password를 입력하라고 나옵니다. 그러면 자신의 Mac 로그인에 사용되는 비밀번호를 작성 후 return 키를 눌러주세요.  사진처럼 진행되고 마지막 문장 Press RETURN to continue or any other key to abort가 나오면 return 키를 눌러주세요.  사진과 같은 화면이 나오면 정상적으로 Homebrew 설치가 완료된 거예요. 1.Hom…","fields":{"slug":"/homebrew-install/"},"frontmatter":{"categories":"mac homebrew","title":"HomeBrew 명령어 및 설치 방법","date":"September 02, 2022"}},"next":{"fields":{"slug":"/react-1/"}},"previous":{"fields":{"slug":"/python-venv/"}}},{"node":{"id":"a336b5e9-cec9-5358-b459-2fa7e10d603c","excerpt":"리액트 기본 설치 및 실행 방법에 대해 알아보겠습니다. 1.Node.js 설치 리액트 프로젝트를 만들기 위해서는 Node.js와 npm을 반드시 먼저 설치하셔야 합니다.\nnode.js 다운로드 홈페이지 에서 LTS 버전을 다운로드 및 설치를 진행해 주시면 됩니다.  설치가 완료 되었으면 윈도우 사용자는 cmd 맥 사용자는 터미널을 열어주시고\n 를 입력해주시면  이라는 버전이 뜨면 정상적으로 설치가 완료 된 것입니다. 2.React 프로젝트 만들기 이제 리액트 프로젝트를 생성하기 위해 작업 폴더를 하나 만들어 주시고 터미널에서 해당 작업 폴더로 이동하신 다음에  라고 입력을 해주시면 리액트 프로젝트가 만들어지게 됩니다. 프로젝트 생성이 완료되면 터미널에서  그 다음  를 해주시면 http://localhost:3000 주소로 브라우저가 새로 열리고 아래 이미지처럼 리액트 기본 화면이 보이는 것을 확인 할 수 있습니다.  3.yarn으로 설치하는 방법  으로 yarn 을 설치해 줍니다…","fields":{"slug":"/react-1/"},"frontmatter":{"categories":"react","title":"리액트 프로젝트 시작","date":"September 01, 2022"}},"next":{"fields":{"slug":"/markdown-basics/"}},"previous":{"fields":{"slug":"/homebrew-install/"}}},{"node":{"id":"b9be1d27-31aa-5319-8bf9-2aae9116c73a","excerpt":"1.제목 2.이텔릭 글자 3.볼드 글자 4.취소선 글자 5.하이라이트 글자 6.리스트 7.숫자 리스트 8.인용글 9.체크박스 1.제목 2.이텔릭 글자 3.볼드 글자 4.취소선 글자 5.하이라이트 글자 6.리스트 7.숫자 리스트 8.인용글 9.체크박스","fields":{"slug":"/markdown-basics/"},"frontmatter":{"categories":"markdown","title":"마크다운 기본","date":"September 01, 2022"}},"next":{"fields":{"slug":"/css-toggle-switch/"}},"previous":{"fields":{"slug":"/react-1/"}}},{"node":{"id":"aaf479b0-9c55-513b-bb82-6ab9e2149a86","excerpt":"css를 이용해서 토글 스위치를 만들어 보겠습니다.  1.HTML 2.CSS 3.JavaScript 실제 코드 적용 확인하기 사이트가기 1.HTML 2.CSS 3.JavaScript","fields":{"slug":"/css-toggle-switch/"},"frontmatter":{"categories":"css","title":"CSS 토글 버튼 toggle switch 만들기","date":"August 30, 2022"}},"next":null,"previous":{"fields":{"slug":"/markdown-basics/"}}}],"categories":["All","python","mac","homebrew","react","markdown","css"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}