{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/python","result":{"pageContext":{"currentCategory":"python","categories":["All","python","mac","homebrew","react","markdown","css"],"edges":[{"node":{"id":"04339540-47ab-5425-8d4e-f1f2bc9e5145","excerpt":"테스트를 하기 앞서 저는 이전 파이썬 가상환경 만들기 에서 코드를 작성하도록 하겠습니다.  으로 가상환경을 실행시켜 주시고 라는 파일을 생성합니다. 생성이 완료 되었으면 라고 입력한 뒤 터미널에서  라고 입력하시고 아래 이미지 처럼 나오시면 정상적으로 준비가 완료 된 것 입니다.  아래 코드들을 입력하시고 확인하고 싶으시면  라고 입력하시면 됩니다. 1.주석 및 프린트 1-1.주석 주석처리는  으로 하면 주석이 됩니다. 1-2.프린트 프린트 출력은 으로 출력이 가능합니다. 2.변수 2-1.변수 할당 cat_name이라는 변수에 나비라는 문자열을 할당해 보겠습니다. 2-2.숫자 계산 변수에 숫자를 담아 사칙연산을 해보도록 하겠습니다. 2-3.변수 + 텍스트 출력 변수와 텍스트를 합칠때는 앞에 (한줄일 때) 또는 (여러줄일 때)를 활용하면 됩니다. 3.연산자 3-1.산술 연산자 a = 10, b = 20, c = 3 이라고 하면 Operator Description Example + …","fields":{"slug":"/python-basics/"},"frontmatter":{"categories":"python","title":"python 기초","date":"September 03, 2022"}},"next":{"fields":{"slug":"/python-venv/"}},"previous":null},{"node":{"id":"b8706932-ec5b-5e66-87dc-efb48a00d355","excerpt":"1.가상환경 생성 python 3.3 이상의 버전 부터는 venv 모듈을 내장하고 있으므로 따로 설치없이 가능합니다. 터미널을 열어 자신이 개발하려는 workspace 폴더에 가서 아래 명령어를 입력합니다.  venv은 가상환경 이름이므로 자유롭게 쓰면 됩니다.  해당 구문을 실행하면 위 이미지 처럼 venv이름을 가진 가상 환경 폴더가 생성 됩니다. 2.가상환경 실행 생성을 했으면 해당 가상환경을 실행해야 합니다. 실행 소스 파일은 가상 환경 폴더 안의 bin폴더 안에 있습니다.  source 명령어를 통해 activate파일을 실행시켜 가상환경에 진입합니다.  위 이미지처럼 terminal 앞쪽에 **(venv)**같이 가상환경의 이름이 붙으면 진입에 성공한 것 입니다.   명령어를 통해 설치된 패키지 버전들을 확인해보면 pip와 setuptools 빼고는 아무것도 설치가 안된 깨끗한 상태임을 확인할 수 있습니다. python3로 가상환경을 만들고 진입했으면 pip3 대신  명…","fields":{"slug":"/python-venv/"},"frontmatter":{"categories":"python","title":"python 가상환경","date":"September 02, 2022"}},"next":{"fields":{"slug":"/homebrew-install/"}},"previous":{"fields":{"slug":"/python-basics/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}